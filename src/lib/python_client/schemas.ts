// This file is auto-generated by @hey-api/openapi-ts

export const $AvailableModels = {
  title: "AvailableModels",
  enum: ["gpt-3.5-turbo"],
  type: "string",
  description: "An enumeration.",
} as const;

export const $ChatStreamRequest = {
  title: "ChatStreamRequest",
  required: ["messages", "model"],
  type: "object",
  properties: {
    messages: {
      title: "Messages",
      type: "array",
      items: {
        $ref: "#/components/schemas/Message",
      },
    },
    model: {
      $ref: "#/components/schemas/AvailableModels",
    },
  },
} as const;

export const $EmbeddingResponse = {
  title: "EmbeddingResponse",
  required: ["data"],
  type: "object",
  properties: {
    data: {
      title: "Data",
      type: "array",
      items: {
        type: "number",
      },
    },
  },
} as const;

export const $HTTPValidationError = {
  title: "HTTPValidationError",
  type: "object",
  properties: {
    detail: {
      title: "Detail",
      type: "array",
      items: {
        $ref: "#/components/schemas/ValidationError",
      },
    },
  },
} as const;

export const $Message = {
  title: "Message",
  required: ["role", "content"],
  type: "object",
  properties: {
    role: {
      $ref: "#/components/schemas/Role",
    },
    content: {
      title: "Content",
      type: "string",
    },
  },
} as const;

export const $Role = {
  title: "Role",
  enum: ["system", "user", "assistant"],
  type: "string",
  description: "An enumeration.",
} as const;

export const $SpacyProcessResponse = {
  title: "SpacyProcessResponse",
  required: ["data"],
  type: "object",
  properties: {
    data: {
      title: "Data",
      type: "array",
      items: {
        $ref: "#/components/schemas/SpacyToken",
      },
    },
  },
} as const;

export const $SpacyToken = {
  title: "SpacyToken",
  required: ["text", "pos", "dep", "lemma"],
  type: "object",
  properties: {
    text: {
      title: "Text",
      type: "string",
    },
    pos: {
      title: "Pos",
      type: "string",
    },
    dep: {
      title: "Dep",
      type: "string",
    },
    lemma: {
      title: "Lemma",
      type: "string",
    },
  },
} as const;

export const $ValidationError = {
  title: "ValidationError",
  required: ["loc", "msg", "type"],
  type: "object",
  properties: {
    loc: {
      title: "Location",
      type: "array",
      items: {
        anyOf: [
          {
            type: "string",
          },
          {
            type: "integer",
          },
        ],
      },
    },
    msg: {
      title: "Message",
      type: "string",
    },
    type: {
      title: "Error Type",
      type: "string",
    },
  },
} as const;
