import "~/styles/globals.css";

// import { Inter } from "next/font/google";

import { TRPCReactProvider } from "~/trpc/react";
import { cn } from "~/lib/utils";
import { ThemeProvider } from "~/components/theme/provider";
import { ThemeToggle } from "~/components/theme/toggle";
import { Toaster } from "~/components/ui/sonner";
import { OpenAIKeyProvider } from "~/components/openai/key-provider";
import { OpenAiKeyDialog } from "~/components/openai/key-dialog";
import { getServerAuthSession } from "~/server/auth";
import { ShapesIcon } from "lucide-react";
import Link from "next/link";
import { Button } from "~/components/ui/button";

// todo: fix fonts??
// const inter = Inter({
//   subsets: ["latin"],
//   variable: "--font-sans",
// });

export const metadata = {
  title: "Jotta Spanish",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const session = await getServerAuthSession();
  const openAIKey = process.env.OPENAI_API_KEY;
  return (
    <html lang="en">
      {/* <body className={cn(inter.className, "antialiased")}> */}
      <body className={cn("antialiased")}>
        <TRPCReactProvider>
          <ThemeProvider
            attribute="class"
            defaultTheme="dark"
            enableSystem
            disableTransitionOnChange
          >
            <OpenAIKeyProvider initialKey={openAIKey}>
              <div className="border-b py-2">
                <div className="container flex items-center justify-between">
                  <Link href="/">
                    <div className="text-xl font-light tracking-widest">
                      <ShapesIcon className="mr-2.5 inline-block stroke-[1px]" />
                      jotta
                    </div>
                  </Link>
                  <div className="flex items-center space-x-4">
                    <OpenAiKeyDialog />
                    <ThemeToggle />
                    <Button variant="secondary" asChild>
                      <Link
                        href={
                          session ? "/api/auth/signout" : "/api/auth/signin"
                        }
                      >
                        {session ? "Logout" : "Login"}
                      </Link>
                    </Button>
                  </div>
                </div>
              </div>
              <main className="mx-auto max-w-4xl py-6">{children}</main>
              <Toaster />
            </OpenAIKeyProvider>
          </ThemeProvider>
        </TRPCReactProvider>
      </body>
    </html>
  );
}
